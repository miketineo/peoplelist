name: Release on PR Merge

on:
  pull_request:
    types:
      - closed

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine changed files
        id: changes
        run: |
          git fetch origin main
          git diff --name-only origin/main...HEAD > changed_files.txt
          cat changed_files.txt

      - name: Determine if WebApp has changes
        id: check_webapp
        run: |
          if grep -q "web-app/" changed_files.txt; then
            echo "WEBAPP_CHANGED=true" >> $GITHUB_ENV
          else
            echo "WEBAPP_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Determine if API Service has changes
        id: check_api
        run: |
          if grep -q "go-api-service/" changed_files.txt; then
            echo "API_CHANGED=true" >> $GITHUB_ENV
          else
            echo "API_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Get current versions
        id: get_versions
        run: |
          WEBAPP_VERSION=$(grep -oP '(?<=:)[0-9]+\.[0-9]+\.[0-9]+' k8s-manifests/web-deployment.yaml)
          API_VERSION=$(grep -oP '(?<=:)[0-9]+\.[0-9]+\.[0-9]+' k8s-manifests/api-deployment.yaml)
          echo "WEBAPP_VERSION=$WEBAPP_VERSION" >> $GITHUB_ENV
          echo "API_VERSION=$API_VERSION" >> $GITHUB_ENV

      - name: Bump WebApp version
        if: env.WEBAPP_CHANGED == 'true'
        id: bump_webapp_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.WEBAPP_VERSION }}"
          PATCH=$((patch+1))
          NEW_WEBAPP_VERSION="$major.$minor.
